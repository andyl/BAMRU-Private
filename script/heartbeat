#!/usr/bin/env ruby

require 'digest'

# We run this hearbeat script once per minute via cron, and show the script
# runtime on a 12-hours graph.  There are many heartbeat traces on the same
# graph.  To make it easy to view the overlaid graphs, we'd like each heartbeat
# trace to show a sine-wave curve with a unique phase and frequency.  
# 
# For each run, we adjust the sleep time to vary between zero and five seconds.
# The sleep times are calculated to cycle at a random frequency between once
# per hour to once every other hour.  
# 
# State is store in a temp file, and is reset every time the machine reboots.
#
# Test by running `time heartbeat`

EXE   = File.expand_path(__FILE__)
SDIR  = "/tmp/heartbeat"
SFILE = Digest::SHA256.hexdigest("#{EXE}")[0..5] + ".txt"
SPATH = "#{SDIR}/#{SFILE}"

system "mkdir -p #{SDIR}"

# read or generate the state
freq, tick = if File.exist?(SPATH)
               File.read(SPATH).chomp.split(";").map {|v| v.to_i}
             else
               [rand(59), rand(59)]
             end

# update the counter and save the new state
tick += 1
File.open(SPATH,'w') {|f| f.puts "#{freq};#{tick}"}

# calculate the sleep time
# see the Ruby docco for details on Math.sin
radians    = ((2 * Math::PI)/(60+freq))*tick
sleep_time = ((Math.sin(radians) + 1) / 2) * 5

# adjust the run_time by sleeping...
sleep(sleep_time)

# output a string for logging
date = `date +%a-%b-%d_%H:%M:%S`.chomp
user = `whoami`.chomp
puts "#{date} USER:#{user} EXE:#{EXE}"
